[package]
name = "ekiden-common"
version = "0.2.0-alpha"
authors = ["Oasis Labs Inc. <info@oasislabs.com>"]
description = "Ekiden common functionality (available to both trusted and untrusted parts)"
keywords = ["ekiden"]
repository = "https://github.com/oasislabs/ekiden"

[features]
default = []
profiling = []

[dependencies]
ekiden-common-api = { path = "./api", version = "0.2.0-alpha" }
protobuf = "~2.0"
byteorder = "1.2.1"
rustc-hex = "1.0"
ring = { git = "https://github.com/oasislabs/ring", default-features = false, features = ["use_heap"], branch = "0.14.0-ekiden" }
# We need aes, block-modes, and crypto-ops as well, since ring doesn't export AES-CTR stuff, nor does it export a secure memset :/
aes-soft = "0.1.0"
block-modes = "0.1.0"
crypto-ops = "0.1.1"
sodalite = "0.3.0"
untrusted = "0.6.2"
bigint = { version = "4.4.0", features = ["std"] }
chrono = "0.4.2"
serde = "1.0.71"
serde_derive = "1.0"
serde_cbor = { git = "https://github.com/oasislabs/cbor", tag = "v0.9.0-ekiden1" }
serde_bytes = "~0.10"
log = "0.4"
zeroize = "0.6.0"

[target.'cfg(target_env = "sgx")'.dependencies]
futures-sgx = { git = "https://github.com/oasislabs/futures-rs" }

[target.'cfg(not(target_env = "sgx"))'.dependencies]
rand = "0.4.2"
grpcio = { version = "~0.4.2", features = ["openssl"] }
futures = "0.1"
env_logger = "0.5.10"
pretty_env_logger = "0.2"
clap = "2.29.1"
openssl = "0.10.10"
tokio = "~0.1.7"

[dev-dependencies]
serde_json = { git = "https://github.com/oasislabs/json" }
base64 = "0.9.0"
