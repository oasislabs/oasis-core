syntax = "proto3";

import "consensus/api/src/consensus.proto";

package computation_group;

service ComputationGroup {
    // Submit a batch to a worker in the same computation group.
    rpc SubmitBatch (SubmitBatchRequest) returns (SubmitBatchResponse) {}
    // Submit a commit to the leader for aggregation.
    rpc SubmitAggCommit (SubmitAggCommitRequest) returns (SubmitAggResponse) {}
    // Submit a reveal to the leader for aggregation.
    rpc SubmitAggReveal (SubmitAggRevealRequest) returns (SubmitAggResponse) {}

    // Gossip consensus messages
    rpc ConsensusGossip (ConsensusGossipRequest) returns (ConsensusGossipResponse) {}
}

message SubmitBatchRequest {
    bytes batch_hash = 1;
}

message SubmitBatchResponse {
}

message SubmitAggCommitRequest {
    consensus.Commitment commit = 1;
}

message SubmitAggRevealRequest {
    consensus.Reveal reveal = 1;
}

message SubmitAggResponse {
    bytes receipt = 1;
}

message ConsensusGossipRequest {
    consensus.Content content = 1;
}

message ConsensusGossipResponse {
}
