syntax = "proto3";

import "common/api/src/common.proto";

package roothash;
option go_package = "github.com/oasislabs/ekiden/go/grpc/roothash";

service RootHash {
  rpc GetLatestBlock (LatestBlockRequest) returns (LatestBlockResponse) {}
  rpc GetBlocks (BlockRequest) returns (stream BlockResponse) {}
  rpc GetBlocksSince (BlockSinceRequest) returns (stream BlockResponse) {}
  rpc GetEvents (EventRequest) returns (stream EventResponse) {}
  rpc Commit (CommitRequest) returns (CommitResponse) {}
}

message Nonce {
  bytes data = 1;
}

message Commitment {
  bytes data = 1;
}

message LatestBlockRequest {
  bytes contract_id = 1;
}

message LatestBlockResponse {
  common.Block block = 1;
}

message BlockRequest {
  bytes contract_id = 1;
}

message BlockResponse {
  common.Block block = 1;
}

message BlockSinceRequest {
  bytes contract_id = 1;
  bytes round = 2;
}

message EventRequest {
  bytes contract_id = 1;
}

message Event {
  message RoundFailed {
    string error = 1;
  }
  message DiscrepancyDetected {
    bytes batch_hash = 1;
    common.Header block_header = 2;
  }

  oneof event {
    RoundFailed round_failed = 1;
    DiscrepancyDetected discrepancy_detected = 2;
  }
}

message EventResponse {
  Event event = 1;
}

message CommitRequest {
  bytes contract_id = 1;
  Commitment commitment = 2;
}

message CommitResponse {
}
