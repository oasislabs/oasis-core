##################################
# Docker image deployment pipeline
##################################
docker_plugin: &docker_plugin_configuration
  oasislabs/docker#v3.0.1-oasis1:
    image: "oasislabs/development:0.3.0"
    always_pull: true
    workdir: /workdir
    volumes:
      - .:/workdir
      - /var/lib/buildkite-agent/.ssh:/root/.ssh
      - /var/lib/buildkite-agent/.ekiden:/root/.ekiden
      # Shared Rust incremental compile caches.
      - /var/lib/buildkite-agent/.cache/cargo_ic/release:/workdir/target/release/incremental
      - /var/lib/buildkite-agent/.cache/cargo_ic/release_sgx:/workdir/target/x86_64-unknown-linux-sgx/release/incremental
      # Shared Rust package checkouts directory.
      - /var/lib/buildkite-agent/.cache/cargo_pkg/git:/root/.cargo/git
      - /var/lib/buildkite-agent/.cache/cargo_pkg/registry:/root/.cargo/registry
      # Shared Rust SGX standard library artifacts cache.
      - /var/lib/buildkite-agent/.cache/xargo_cache:/root/.xargo
      # Shared Go package checkouts directory.
      - /var/lib/buildkite-agent/.cache/go_pkg:/root/go/pkg
    tmpfs:
      - /tmp:exec
    environment:
      - "LC_ALL=C.UTF-8"
      - "LANG=C.UTF-8"
      - "CARGO_TARGET_DIR=/workdir/target"
      - "CARGO_INSTALL_ROOT=/root/.cargo"
      - "KM_DUMMY_ENCRYPTION_KEY=/root/.ekiden/keymanager_dummy_encryption.key"
      - "KM_DUMMY_SIGNING_KEY=/root/.ekiden/keymanager_dummy_signing.key"
    propagate-environment: true

steps:
  - label: Get docker tag and save it as metadata for use later
    command: .buildkite/scripts/set_docker_tag_meta_data.sh

  - label: Build artifacts (master branches only)
    branches: master
    command:
      - .buildkite/scripts/setup_gitconfig.sh
      - eval $(ssh-agent -s)
      - ssh-add
      - docker/deployment/build_context.sh context.tar.gz
    artifact_paths:
      - context.tar.gz
    agents:
      buildkite_agent_size: large
    plugins:
      <<: *docker_plugin_configuration

  - wait

  - label: Build docker image (master branches only)
    branches: master
    command:
      - .buildkite/scripts/build_tag_push_deployment_image.sh context.tar.gz

  - block: Human approval required to deploy docker image
    branches: "*"
    prompt: |
      Clicking "OK" below will unblock this step and
      permit the docker image to be tagged as latest
      which means that the image will be used as a
      base image for all runtime builds.

      NOTE: This will NOT deploy the image to any testnet.

  - label: Deploy docker image (master branches only)
    branches: master
    command:
      - .buildkite/scripts/promote_deployment_image_to.sh latest
