syntax = "proto3";

import "registry/api/src/runtime.proto";

package scheduler;
option go_package = "github.com/oasislabs/ekiden/go/grpc/scheduler";

service Scheduler {
  rpc GetCommittees (CommitteeRequest) returns (CommitteeResponse) {}
  rpc WatchCommittees (WatchRequest) returns (stream WatchResponse) {}
}

message CommitteeNode {
  bytes public_key = 1;
  enum Role {
    INVALID = 0;
    WORKER = 1;
    LEADER = 2;
    BACKUP_WORKER = 3;
  }
  Role role = 2;
}

message Committee {
  enum Kind {
    COMPUTE = 0;
    STORAGE = 1;
  }
  Kind kind = 1;
  repeated CommitteeNode members = 2;
  registry.Runtime runtime = 3;
  uint64 valid_for = 4;
}

message CommitteeRequest {
  bytes runtime_id = 1;
}

message CommitteeResponse {
  repeated Committee committee = 1;
}

message WatchRequest {
}

message WatchResponse {
  Committee committee = 1;
}
