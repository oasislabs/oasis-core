syntax = "proto3";

import "common/common.proto";

package registry;
option go_package = "github.com/oasislabs/ekiden/go/grpc/registry";

message Runtime {
    bytes id = 1;
    bytes code = 2;

    common.CapabilitiesTEE.Hardware tee_hardware = 3;

    uint64 replica_group_size = 4;

    uint64 storage_group_size = 5;

    uint64 replica_group_backup_size = 6;

    uint64 replica_allowed_stragglers = 7;

    uint64 registration_time = 8;
}

service RuntimeRegistry {
    rpc RegisterRuntime (RegisterRuntimeRequest) returns (RegisterRuntimeResponse) {}
    rpc GetRuntime (RuntimeRequest) returns (RuntimeResponse) {}
    rpc GetRuntimes (RuntimesRequest) returns (RuntimesResponse) {}
    rpc WatchRuntimes (WatchRuntimesRequest) returns (stream WatchRuntimesResponse) {}
}

message RegisterRuntimeRequest {
    // Signed blob should be a CBOR-serialized runtime.
    common.Signed runtime = 1;
}

message RegisterRuntimeResponse {
}

message RuntimeRequest {
    bytes id = 1;
}

message RuntimeResponse {
    Runtime runtime = 1;
}

message RuntimesRequest {
}

message RuntimesResponse {
    repeated Runtime runtime = 1;
}

message WatchRuntimesRequest {
}

message WatchRuntimesResponse {
    Runtime runtime = 1;
}
